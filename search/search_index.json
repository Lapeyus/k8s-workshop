{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Opinionated GKE CD Workshop","text":"<p>Welcome to the Opinionated GKE Continuous Deployment (CD) Workshop! This comprehensive guide will walk you through the entire process of implementing Continuous Deployment on Google Kubernetes Engine (GKE) using Helm, Argo CD, Artifact Registry, and Terraform Templates.</p>"},{"location":"#overview","title":"Overview","text":"<p>This workshop is designed to give you hands-on experience with some of the leading tools in the Kubernetes ecosystem. By the end of this workshop, you'll understand how to:</p> <ul> <li>Create and manage a GKE cluster.</li> <li>Use Helm to package and deploy applications.</li> <li>Set up Argo CD for continuous deployment.</li> <li>Integrate Artifact Registry for container management.</li> <li>Write and apply Terraform templates to manage infrastructure.</li> </ul>"},{"location":"#table-of-contents","title":"Table of Contents","text":"<ol> <li>Introduction</li> <li>Setting Up the Environment</li> <li>Helm Charts Creation</li> <li>Argo CD Setup and Configuration</li> <li>Artifact Registry Integration</li> <li>Terraform Templates Creation</li> <li>Deploying the Full Stack</li> <li>Clean Up</li> <li>Q&amp;A Session</li> <li>Conclusion and Additional Resources</li> </ol>"},{"location":"argocd-setup/","title":"Bootstrapping ArgoCD on GCP: A Comprehensive Guide","text":""},{"location":"argocd-setup/#introduction","title":"Introduction","text":"<p>Deploying applications on a cloud platform can be a daunting task. In this guide, we will walk you through the process of bootstrapping ArgoCD on Google Cloud Platform (GCP). By the end of this guide, you'll be managing your Kubernetes clusters like a pro!</p>"},{"location":"argocd-setup/#contents","title":"Contents","text":"<ol> <li>Introduction</li> <li>Prerequisites</li> <li>Setting Up a Kubernetes Cluster on GCP</li> <li>Installing ArgoCD on the Cluster</li> <li>Configuring ArgoCD with Google Cloud Source Repositories</li> <li>Deploying an Application with ArgoCD</li> <li>Conclusion</li> </ol>"},{"location":"argocd-setup/#prerequisites","title":"Prerequisites","text":"<p>Before we begin, ensure you have the following:</p>"},{"location":"argocd-setup/#steps-to-setup-a-gcp-account-with-appropriate-permissions","title":"Steps to setup A GCP account with appropriate permissions","text":"<p>Remember to follow the principle of least privilege, only granting the required permissions for the specific tasks at hand, and always aligning with your organization's policies and guidelines.</p> <ul> <li>To create a Kubernetes cluster:</li> <li>Assign the <code>roles/container.admin</code> role or create a custom role with <code>container.clusters.create</code> and <code>container.nodes.create</code> permissions.</li> <li>To get credentials for the cluster:</li> <li>Assign the <code>roles/container.developer</code> role or create a custom role with <code>container.clusters.get</code> and <code>container.clusters.getCredentials</code> permissions.</li> <li>You can assign these roles using the following command:   <code>shell   gcloud projects add-iam-policy-binding PROJECT_ID --member=MEMBER --role=roles/container.admin</code>   Replace <code>PROJECT_ID</code> with your project ID and <code>MEMBER</code> with the user or service account to which you want to assign the role.</li> </ul> <p>in my case the command becomes</p> <pre><code>  gcloud projects add-iam-policy-binding jvillarreal-sandbox --member=user:joseph.villarreal@66degrees.com --role=roles/container.admin\n</code></pre>"},{"location":"argocd-setup/#install-the-google-cloud-sdk","title":"Install The Google Cloud SDK","text":"<ol> <li>Open a terminal window.</li> <li>Run the following command to download and install the Google Cloud SDK: <code>shell    curl https://sdk.cloud.google.com | bash</code></li> <li>Restart your shell: <code>shell    exec -l $SHELL</code></li> <li>Initialize the SDK: <code>shell    gcloud init</code></li> </ol>"},{"location":"argocd-setup/#kubernetes-cli-kubectl-installed","title":"Kubernetes CLI (<code>kubectl</code>) Installed","text":"<ol> <li>First, ensure you have the Google Cloud SDK installed, as <code>kubectl</code> can be installed as a part of it.</li> <li>Run the following command to install <code>kubectl</code>: <code>shell    gcloud components install kubectl</code></li> <li>Verify the installation: <code>shell    kubectl version --client</code></li> </ol>"},{"location":"argocd-setup/#helm-installed","title":"Helm Installed","text":"<ol> <li>Download the Helm installation script: <code>shell    curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3</code></li> <li>Make the script executable:</li> </ol> <p><code>shell    chmod 700 get_helm.sh</code></p> <ol> <li>Run the script to install Helm: <code>shell    ./get_helm.sh</code></li> <li>Verify the installation: <code>shell    helm version</code></li> </ol>"},{"location":"argocd-setup/#setting-up-a-kubernetes-cluster-on-gcp","title":"Setting Up a Kubernetes Cluster on GCP","text":"<pre><code># Create a Kubernetes cluster\ngcloud container clusters create my-cluster --region us-central1\n\n# Get the credentials for the cluster\ngcloud container clusters get-credentials my-cluster --region us-central1\n</code></pre>"},{"location":"argocd-setup/#installing-argocd-on-the-cluster","title":"Installing ArgoCD on the Cluster","text":"<pre><code># Add the ArgoCD Helm repository\nhelm repo add argo https://argoproj.github.io/argo-helm\n\n# Update the repository\nhelm repo update\n\n# Install ArgoCD\nhelm install argocd argo/argo-cd\n</code></pre>"},{"location":"argocd-setup/#configuring-argocd-with-google-cloud-source-repositories","title":"Configuring ArgoCD with Google Cloud Source Repositories","text":"<p>In this section, we'll configure ArgoCD to work with Google Cloud Source Repositories, allowing seamless integration with your existing codebase.</p> <pre><code># Example commands to configure ArgoCD with Google Cloud Source Repositories\n# More detailed instructions here\n</code></pre>"},{"location":"argocd-setup/#deploying-an-application-with-argocd","title":"Deploying an Application with ArgoCD","text":"<p>Deploying an application using ArgoCD is a breeze. Here's an example of deploying a sample application:</p> <pre><code># Define the application\n# Deploy the application using ArgoCD\n</code></pre>"},{"location":"argocd-setup/#conclusion","title":"Conclusion","text":"<p>Bootstrapping ArgoCD on GCP streamlines the deployment process, providing a powerful way to manage your Kubernetes applications. Follow these steps, and you'll have a scalable and efficient deployment pipeline in no time!</p>"},{"location":"environment-setup/","title":"Setting Up the Environment","text":""},{"location":"environment-setup/#prerequisites","title":"Prerequisites","text":"<p>Before we begin, ensure you have the following:</p>"},{"location":"environment-setup/#steps-to-setup-a-gcp-account-with-appropriate-permissions","title":"Steps to setup A GCP account with appropriate permissions","text":"<p>Remember to follow the principle of least privilege, only granting the required permissions for the specific tasks at hand, and always aligning with your organization's policies and guidelines.</p> <ul> <li>To create a Kubernetes cluster:</li> <li>Assign the <code>roles/container.admin</code> role or create a custom role with <code>container.clusters.create</code> and <code>container.nodes.create</code> permissions.</li> <li>To get credentials for the cluster:</li> <li>Assign the <code>roles/container.developer</code> role or create a custom role with <code>container.clusters.get</code> and <code>container.clusters.getCredentials</code> permissions.</li> <li>You can assign these roles using the following command:   <code>shell   gcloud projects add-iam-policy-binding PROJECT_ID --member=MEMBER --role=roles/container.admin</code>   Replace <code>PROJECT_ID</code> with your project ID and <code>MEMBER</code> with the user or service account to which you want to assign the role.</li> </ul> <p>in my case the command becomes</p> <pre><code>  gcloud projects add-iam-policy-binding jvillarreal-sandbox --member=user:joseph.villarreal@66degrees.com --role=roles/container.admin\n</code></pre>"},{"location":"environment-setup/#install-the-google-cloud-sdk","title":"Install The Google Cloud SDK","text":"<ol> <li>Open a terminal window.</li> <li>Run the following command to download and install the Google Cloud SDK: <code>shell    curl https://sdk.cloud.google.com | bash</code></li> <li>Restart your shell: <code>shell    exec -l $SHELL</code></li> <li>Initialize the SDK: <code>shell    gcloud init</code></li> </ol>"},{"location":"environment-setup/#kubernetes-cli-kubectl-installed","title":"Kubernetes CLI (<code>kubectl</code>) Installed","text":"<ol> <li>First, ensure you have the Google Cloud SDK installed, as <code>kubectl</code> can be installed as a part of it.</li> <li>Run the following command to install <code>kubectl</code>: <code>shell    gcloud components install kubectl</code></li> <li>Verify the installation: <code>shell    kubectl version --client</code></li> </ol>"},{"location":"environment-setup/#helm-installed","title":"Helm Installed","text":"<ol> <li>Download the Helm installation script: <code>shell    curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3</code></li> <li>Make the script executable:</li> </ol> <p><code>shell    chmod 700 get_helm.sh</code></p> <ol> <li>Run the script to install Helm: <code>shell    ./get_helm.sh</code></li> <li>Verify the installation: <code>shell    helm version</code></li> </ol>"},{"location":"environment-setup/#setting-up-a-kubernetes-cluster-on-gcp","title":"Setting Up a Kubernetes Cluster on GCP","text":"<pre><code># Create a Kubernetes cluster\ngcloud container clusters create my-cluster --region us-central1\n\n# Get the credentials for the cluster\ngcloud container clusters get-credentials my-cluster --region us-central1\n</code></pre>"},{"location":"introduction/","title":"Introduction","text":""},{"location":"introduction/#hands-on-labs","title":"Hands-on Labs","text":"<p>We've included hands-on labs to ensure practical learning. You'll find exercises embedded within each section to reinforce your understanding of the concepts.</p>"},{"location":"introduction/#duration","title":"Duration","text":"<p>The workshop is designed to last approximately 5-6 hours, including breaks.</p>"},{"location":"introduction/#support","title":"Support","text":"<p>Should you encounter any issues or have any questions, please refer to our Support Page or contact the workshop facilitators.</p> <p>Let's begin the journey, and happy learning!</p>"},{"location":"prerequisites/","title":"Prerequisites","text":""},{"location":"prerequisites/#prerequisites","title":"Prerequisites","text":"<p>Before you begin, make sure you have a basic understanding of the following:</p> <ul> <li>Kubernetes</li> <li>Helm</li> <li>Terraform</li> <li>Argo CD (Optional)</li> <li>Docker (Optional)</li> </ul> <p>Click here for resources to help you prepare.</p>"},{"location":"blog/","title":"Blog","text":""}]}